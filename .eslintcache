[{"C:\\Users\\Admin\\Documents\\Jibin\\Learning\\react-shopping-cart\\src\\App.tsx":"1","C:\\Users\\Admin\\Documents\\Jibin\\Learning\\react-shopping-cart\\src\\index.tsx":"2"},{"size":777,"mtime":1611549323589,"results":"3","hashOfConfig":"4"},{"size":324,"mtime":1611548167852,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"18noj2k",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Documents\\Jibin\\Learning\\react-shopping-cart\\src\\App.tsx",["11","12","13","14","15","16","17","18","19"],"import { useState } from 'react';\nimport { useQuery } from 'react-query';\n//Components\nimport { Drawer, LinearProgress, Grid, Badge } from '@material-ui/core';\nimport { AddShoppingCart } from '@material-ui/icons';\n//styles\nimport { Wrapper } from './App.styles';\n//Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nfunction App() {\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log('data---', data);\n\n  return <div className=\"App\">Hello World</div>;\n}\n\nexport default App;\n","C:\\Users\\Admin\\Documents\\Jibin\\Learning\\react-shopping-cart\\src\\index.tsx",[],{"ruleId":"20","severity":1,"message":"21","line":1,"column":10,"nodeType":"22","messageId":"23","endLine":1,"endColumn":18},{"ruleId":"20","severity":1,"message":"24","line":4,"column":10,"nodeType":"22","messageId":"23","endLine":4,"endColumn":16},{"ruleId":"20","severity":1,"message":"25","line":4,"column":18,"nodeType":"22","messageId":"23","endLine":4,"endColumn":32},{"ruleId":"20","severity":1,"message":"26","line":4,"column":34,"nodeType":"22","messageId":"23","endLine":4,"endColumn":38},{"ruleId":"20","severity":1,"message":"27","line":4,"column":40,"nodeType":"22","messageId":"23","endLine":4,"endColumn":45},{"ruleId":"20","severity":1,"message":"28","line":5,"column":10,"nodeType":"22","messageId":"23","endLine":5,"endColumn":25},{"ruleId":"20","severity":1,"message":"29","line":7,"column":10,"nodeType":"22","messageId":"23","endLine":7,"endColumn":17},{"ruleId":"20","severity":1,"message":"30","line":23,"column":17,"nodeType":"22","messageId":"23","endLine":23,"endColumn":26},{"ruleId":"20","severity":1,"message":"31","line":23,"column":28,"nodeType":"22","messageId":"23","endLine":23,"endColumn":33},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Drawer' is defined but never used.","'LinearProgress' is defined but never used.","'Grid' is defined but never used.","'Badge' is defined but never used.","'AddShoppingCart' is defined but never used.","'Wrapper' is defined but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used."]